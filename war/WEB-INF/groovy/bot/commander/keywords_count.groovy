import com.google.appengine.api.datastore.*import static com.google.appengine.api.datastore.FetchOptions.Builder.*import hatenahaiku4j.*import hatenahaiku4j.util.*import util.*import dao.*SERVICE			= 'haiku'					// サービスPRIORITY		= 300						// 優先度BOT_ID			= 'macalloni'				// ボットKIND			= 'KeywordsCount'			// データカインドTARGET_KEYWORD	= 'はてなハイクキーワード'	// 投稿対象キーワード	try{	// データストアよりデータを取得してくる	def kcInfo = getKeywordCountMap()	// 投稿する内容	def text = new TemplateReader().read('keyword/count_of_keywords.tmpl', [		'date'       : HatenaUtil.formatDate(kcInfo.updatedAt),						// 日付		'count'      : java.text.NumberFormat.instance.format(kcInfo.count as int),	// 件数		'lastPage'   : kcInfo.lastPage as int,										// PC版最後のページ		'mobilePage' : kcInfo.lastPageMobile as int									// モバイル版最後のページ	])	// コマンドを登録	new CommandQueueDao().addCommand([		'service'	: SERVICE,		'priority'	: PRIORITY,		'createdAt'	: DateUtil.now,		'who'		: BOT_ID,		'command'	: 'entry',		'keyword'	: TARGET_KEYWORD,		'text'		: text	])	println "登録完了"} catch(Throwable t) {	t.printStackTrace()}/** * 必ず1件のみ取得される(1件しかデータがない) */def getKeywordCountMap() {	// 1件の結果のみ受け取る。	def q = new Query(KIND)	def info = datastoreService.prepare(q).asSingleEntity()	if (!info) {		info				= new Entity(KIND)		info.count			= 0					// 件数		info.updatedAt		= DateUtil.now		// 更新日時		info.lastPage		= 3034				// 最終ページ		info.lastPageMobile	= 1					// 最終ページ(携帯)		info.save()	}	info}