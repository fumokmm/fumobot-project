import dao.*import static util.DaoUtil.*import hatenahaiku4j.*import hatenahaiku4j.util.*try {	// 引数よりページを取得	if (!params?.page) {		request.setAttribute 'message', '引数:pageが指定されていません。'		forward '/error.gtpl'	} else {		int page = params.page.toInteger()		def dao = new HaikuStatusDao()		def apiLight = new HatenaHaikuAPILight()				if (params?.type) {			// 検索タイプ指定がある場合			switch (params.type) {				case 'id' :					// 現存する最古エントリの作成時を取得					def since = dao.getFirstStatus()[CREATED_AT]					def idList = [].with {						// id:fumobotタイムラインを取得						it += apiLight.getIdTimeline('fumobot', page, 20, since)						// id:macalloniタイムラインを取得						it += apiLight.getIdTimeline('macalloni', page, 20, since)					}					idList.each { status ->						dao.addStatus(status)					}					break;			}					} else {			// 検索タイプ指定がない場合			// パブリックタイムラインを取得			def publicList = apiLight.getPublicTimeline(page)			println "パブリックタイムライン取得件数: ${publicList.size()}<br/>"			publicList.each { status ->				dao.addStatus(status)			}		}	}} catch(Exception e) {	e.printStackTrace()}println "処理終了"